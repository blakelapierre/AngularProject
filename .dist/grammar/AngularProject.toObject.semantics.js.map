{"version":3,"sources":["grammar/AngularProject.toObject.semantics.js"],"names":[],"mappings":";;;;;;AAAA;;kBAGe;AACb,cAAa,OAAb,EAAsB,SAAtB,EAAiC,IAAjC,EAAuC;AACrC,WAAO,CAAC,QAAQ,QAAR,EAAD,EAAqB,MAArB,CAA4B,KAAK,QAAL,EAA5B,CAAP,CADqC;GAAvC;;AAIA,aAAY,IAAZ,EAAkB,OAAlB,EAA2B,KAA3B,EAAkC;AAChC,WAAO,QAAQ,QAAR,EAAP,CADgC;GAAlC;;AAIA,cAAa,IAAb,EAAmB,OAAnB,EAA4B;AAC1B,WAAO,gBAAK,EAAC,IAAD,EAAO,OAAP,EAAL,CAAP,CAD0B;GAA5B;;AAIA,UAAQ,CAAC,IAAD,EAAO,QAAP,KAAoB,gBAAK,OAAO,MAAP,CAAc,EAAC,IAAD,EAAd,EAAsB,OAAO,SAAS,QAAT,EAAP,EAA4B,CAAC,GAAD,EAAM,OAAN,KAAkB,OAAO,MAAP,CAAc,GAAd,EAAmB,OAAnB,CAAlB,CAAlD,CAAL,CAApB;;AAER,gBAAc,CAAC,KAAD,EAAQ,YAAR,KAAyB,gBAAK,EAAC,YAAD,EAAL,CAAzB;;AAEd,eAAa,CAAC,UAAD,EAAa,aAAb,KAA+B,gBAAK,EAAC,UAAD,EAAa,eAAe,iBAAM,aAAN,CAAf,EAAlB,CAA/B;AACb,aAAW,CAAC,KAAD,EAAQ,aAAR,KAA0B,cAAc,QAAd,EAA1B;;AAEX,cAAY,CAAC,KAAD,EAAQ,UAAR,KAAuB,gBAAK,EAAC,UAAD,EAAL,CAAvB;;AAEZ,aAAW,CAAC,IAAD,EAAO,UAAP,KAAsB,gBAAK,EAAC,IAAD,EAAO,YAAY,iBAAM,UAAN,KAAqB,EAArB,EAAxB,CAAtB;;AAEX,UAAQ,CAAC,KAAD,EAAQ,MAAR,KAAmB,gBAAK,EAAC,MAAD,EAAL,CAAnB;;AAER,SAAO,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,KAAuB,gBAAK,EAAC,IAAD,EAAO,IAAP,EAAL,CAAvB;;AAEP,aAAW,CAAC,KAAD,EAAQ,SAAR,KAAsB,gBAAK,EAAC,SAAD,EAAL,CAAtB;;AAEX,WAAS,CAAC,IAAD,EAAO,SAAP,KAAqB,gBAAK,EAAC,IAAD,EAAO,WAAW,iBAAM,SAAN,KAAoB,EAApB,EAAvB,CAArB;;AAET,WAAS,CAAC,KAAD,EAAQ,OAAR,KAAoB;AAC3B,UAAM,MAAM,gBAAK,EAAC,OAAD,EAAL,CAAN,CADqB;AAE3B,QAAI,IAAI,OAAJ,CAAY,MAAZ,KAAuB,CAAvB,EAA0B,IAAI,OAAJ,CAAY,IAAZ,CAAiB,QAAjB,EAA9B;AACA,WAAO,GAAP,CAH2B;GAApB;;AAMT,OAAM,SAAN,EAAiB;AACf,WAAO,KAAK,QAAL,CAAc,QAAd,CADQ;GAAjB;;AAIA,OAAM,SAAN,EAAiB;AACf,WAAO,KAAK,QAAL,CAAc,QAAd,CADQ;GAAjB;;;AAKF,SAAS,MAAT,CAAgB,EAAhB,EAAoB,EAApB,EAAwB,UAAU,EAAV,EAAc;AACpC,MAAI,OAAO,OAAP,CADgC;AAEpC,KAAG,OAAH,CAAW,KAAK,OAAO,GAAG,IAAH,EAAS,CAAT,CAAP,CAAhB,CAFoC;AAGpC,SAAO,IAAP,CAHoC;CAAtC","file":"grammar/AngularProject.toObject.semantics.js","sourcesContent":["import {join, first} from './util';\n\n\nexport default {\n  ListOf_some (element, separator, rest) {\n    return [element.toObject()].concat(rest.toObject());\n  },\n\n  CContained (open, element, close) {\n    return element.toObject();\n  },\n\n  Application (name, modules) {\n    return join({name, modules});\n  },\n\n  Module: (name, elements) => join(Object.assign({name}, reduce(elements.toObject(), (obj, element) => Object.assign(obj, element)))),\n\n  Requirements: (glyph, requirements) => join({requirements}),\n\n  Requirement: (moduleName, jsPackageName) => join({moduleName, jsPackageName: first(jsPackageName)}),\n  JSPackage: (colon, jsPackageName) => jsPackageName.toObject(),\n\n  Components: (glyph, components) => join({components}),\n\n  Component: (name, components) => join({name, components: first(components) || []}),\n\n  Routes: (glyph, routes) => join({routes}),\n\n  Route: (path, colon, name) => join({path, name}),\n\n  Factories: (glyph, factories) => join({factories}),\n\n  Factory: (name, factories) => join({name, factories: first(factories) || []}),\n\n  Configs: (glyph, configs) => {\n    const obj = join({configs});\n    if (obj.configs.length === 0) obj.configs.push('config');\n    return obj;\n  },\n\n  name (character) {\n    return this.interval.contents;\n  },\n\n  path (character) {\n    return this.interval.contents;\n  }\n};\n\nfunction reduce(xs, fn, initial = {}) {\n  let next = initial;\n  xs.forEach(x => next = fn(next, x));\n  return next;\n}"],"sourceRoot":"/source/"}