{"version":3,"sources":["tests/index.js"],"names":[],"mappings":";;AAAA;;;;AAEA;;;;AAEA;;;;AAEA,MAAM,SAAS,kBAAU,8BAAV,CAAT;;;;;;;;;;AAUN,IAAI,eAAK,OAAL,CAAa,MAAb,EAAqB,KAArB,EAA4B,IAA5B,CAAJ;;;;;;AAMA,SAAS,GAAT,CAAa,GAAG,IAAH,EAAS;AACpB,UAAQ,GAAR,CAAY,KAAZ,CAAkB,OAAlB,EAA2B,KAAK,GAAL,CAAS,YAAT,CAA3B,EADoB;;AAGpB,WAAS,YAAT,CAAsB,GAAtB,EAA2B;AACzB,YAAQ,OAAO,GAAP;AACN,WAAK,QAAL;AAAe,eAAO,eAAK,OAAL,CAAa,GAAb,EAAkB,EAAC,YAAY,IAAZ,EAAkB,OAAO,IAAP,EAArC,CAAP,CAAf;AADF;AAEW,eAAO,GAAP,CAAT;AAFF,KADyB;GAA3B;CAHF","file":"tests/index.js","sourcesContent":["import util from 'util';\n\nimport _ from 'lodash';\n\nimport {runOnFile} from './../';\n\nconst object = runOnFile('./tests/samples/2016-fantasy');\n\n// import {loadGrammarWithSemantics, runFromFile} from '../ohmLoader';\n\n// import {toAngularProject} from '../transformers/toAngularProject';\n\n// const {grammar, semantics} = loadGrammarWithSemantics('AngularProject', ['toObject']);\n\n// const object = runFromFile('./tests/samples/2016-fantasy', grammar, semantics, 'toObject');\n\nlog(util.inspect(object, false, null));\n\n// log(toPostgreSQL(orderTables(model)).join('\\n'));\n\n// toAngularProject(object);\n\nfunction log(...args) {\n  console.log.apply(console, args.map(transformArg));\n\n  function transformArg(arg) {\n    switch (typeof arg) {\n      case 'object': return util.inspect(arg, {showHidden: true, depth: null});\n      default: return arg;\n    }\n  }\n}"],"sourceRoot":"/source/"}